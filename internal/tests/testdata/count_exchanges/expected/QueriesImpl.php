<?php
// @formatter:off
// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

declare(strict_types=1);

namespace Test\CountExchanges;

const countExchanges = "-- name: countExchanges :one
SELECT
    COUNT(*)
FROM
    exchange
";

const getAllExchanges = "-- name: getAllExchanges :many
SELECT
    id,
    name,
    COUNT(*)
FROM
    exchange
";

const getIdByName = "-- name: getIdByName :one
SELECT
    id
FROM
    exchange
WHERE
    name = ?1
";

final readonly class QueriesImpl implements Queries {
    public function __construct(private \PDO $pdo) {}

    /**
     * @return int|null
     * @throws \Exception
     */
    public function countExchanges(): ?int
    {
        $stmt = $this->pdo->prepare(countExchanges);
        $stmt->execute([]);
        $results = $stmt->fetchAll(\PDO::FETCH_COLUMN);
        $ret = [];
        if(count($results) != 1){
            throw new \Exception('Expected exactly 1 row, but got ' . count($results));
        }

        $row = $results[0];
        $ret[] = (int)($row);
        return $ret[0];
    }

    /**
     * @return GetAllExchangesRow[]
     * @throws \Exception
     */
    public function getAllExchanges(): array
    {
        $stmt = $this->pdo->prepare(getAllExchanges);
        $stmt->execute([]);
        $results = $stmt->fetchAll(\PDO::FETCH_NUM);
        $ret = [];
        foreach ($results as $row) {
            $ret[] = new GetAllExchangesRow($row[0], $row[1], $row[2]);
        }
        return $ret;
    }

    /**
     * @return int|null
     * @throws \Exception
     */
    public function getIdByName(string $name): ?int
    {
        $stmt = $this->pdo->prepare(getIdByName);
        $stmt->execute([$name]);
        $results = $stmt->fetchAll(\PDO::FETCH_COLUMN);
        $ret = [];
        if(count($results) != 1){
            throw new \Exception('Expected exactly 1 row, but got ' . count($results));
        }

        $row = $results[0];
        $ret[] = (int)($row);
        return $ret[0];
    }

}

