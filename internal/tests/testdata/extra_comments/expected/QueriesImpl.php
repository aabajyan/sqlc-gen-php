<?php
// @formatter:off
// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

declare(strict_types=1);

namespace Test\ExtraComments;

const listEntities = "-- name: listEntities :many
SELECT
    id, title, data, locked, locked_message, owner_id, created_at, updated_at
FROM
    entity
WHERE
    (
        ?1 IS NULL
        OR locked = ?1
    )
    AND (
        ?2 IS NULL
        OR owner_id = ?2
    )
    AND (
        ?3 IS NULL
        OR title LIKE '%' || ?3 || '%'
    )
ORDER BY
    id DESC
";

final readonly class QueriesImpl implements Queries {
    public function __construct(private \PDO $pdo) {}

    /**
     * @sqlc-param bool|null $locked=null
     * @sqlc-param int|null $owner_id=null
     * @sqlc-param string|null $title=null
     * @return Entity[]
     * @throws \Exception
     */
    public function listEntities(bool|null $locked = null, int|null $ownerId = null, string|null $title = null): array
    {
        $stmt = $this->pdo->prepare(listEntities);
        $stmt->execute([$locked, $ownerId, $title]);
        $results = $stmt->fetchAll(\PDO::FETCH_NUM);
        $ret = [];
        foreach ($results as $row) {
            $ret[] = new Entity($row[0], $row[1], json_decode($row[2], true) ?? [], $row[3], $row[4], $row[5], new \DateTimeImmutable($row[6]), new \DateTimeImmutable($row[7]));
        }
        return $ret;
    }

}

