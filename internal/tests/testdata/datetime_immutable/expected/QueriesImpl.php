<?php
// @formatter:off
// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

declare(strict_types=1);

namespace Test\DateTimeImmutable;

const addAuthor = "-- name: addAuthor :exec
INSERT INTO
    author (name, created_at)
VALUES
    (?1, ?2)
";

const getAuthorByCreatedAt = "-- name: getAuthorByCreatedAt :one
SELECT
    id, name, created_at
FROM
    author
WHERE
    created_at = ?
";

final readonly class QueriesImpl implements Queries {
    public function __construct(private \PDO $pdo) {}

    /**
     * @throws \Exception
     */
    public function addAuthor(string $name, ?string $createdAt): void
    {
        $stmt = $this->pdo->prepare(addAuthor);
        $stmt->execute([$name, $createdAt]);
    }

    /**
     * @return Author|null
     * @throws \Exception
     */
    public function getAuthorByCreatedAt(string $createdAt): ?Author
    {
        $stmt = $this->pdo->prepare(getAuthorByCreatedAt);
        $stmt->execute([$createdAt]);
        $results = $stmt->fetchAll(\PDO::FETCH_NUM);
        {
            $count = count($results);
            if ($count === 0) {
                return null;
            }
            
            if ($count !== 1) {
                throw new \Exception('Expected exactly 1 row, but got ' . $count);
            }
        }

        $row = $results[0];
        return new Author($row[0], $row[1], $row[2]);
    }

}

